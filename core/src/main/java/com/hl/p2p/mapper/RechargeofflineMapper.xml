<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hl.p2p.mapper.RechargeofflineMapper" >
  <resultMap id="BaseResultMap" type="com.hl.p2p.pojo.Rechargeoffline" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="audittime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="auditor_id" property="auditorId" jdbcType="BIGINT" />
    <result column="applier_id" property="applierId" jdbcType="BIGINT" />
    <result column="tradeCode" property="tradecode" jdbcType="VARCHAR" />
    <result column="tradeTime" property="tradetime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="bankinfo_id" property="bankinfoId" jdbcType="BIGINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from rechargeoffline
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hl.p2p.pojo.Rechargeoffline" >
    insert into rechargeoffline (id, state, remark, 
      auditTime, applyTime, auditor_id, 
      applier_id, tradeCode, tradeTime, 
      amount, note, bankinfo_id
      )
    values (#{id,jdbcType=BIGINT}, #{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{audittime,jdbcType=TIMESTAMP}, #{applytime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=BIGINT}, 
      #{applierId,jdbcType=BIGINT}, #{tradecode,jdbcType=VARCHAR}, #{tradetime,jdbcType=TIMESTAMP}, 
      #{amount,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, #{bankinfoId,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hl.p2p.pojo.Rechargeoffline" >
    update rechargeoffline
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{audittime,jdbcType=TIMESTAMP},
      applyTime = #{applytime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=BIGINT},
      applier_id = #{applierId,jdbcType=BIGINT},
      tradeCode = #{tradecode,jdbcType=VARCHAR},
      tradeTime = #{tradetime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      bankinfo_id = #{bankinfoId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, state, remark, auditTime, applyTime, auditor_id, applier_id, tradeCode, 
    tradeTime, amount, note, bankinfo_id
    from rechargeoffline
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, state, remark, auditTime, applyTime, auditor_id, applier_id, tradeCode, 
    tradeTime, amount, note, bankinfo_id
    from rechargeoffline
  </select>
</mapper>